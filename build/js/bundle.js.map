{"version":3,"sources":["app.js","galeria.js"],"names":["navegacionFija","barra","document","querySelector","IntersectionObserver","entries","isIntersecting","classList","remove","add","observe","scrollNav","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","console","log","target","attributes","href","value","scrollIntoView","behavior","crearGaleria","Galeria","i","imagen","createElement","src","dataset","imagenId","onclick","mostrarimagen","lista","appendChild","evento","id","parseInt","overlay","cerrarimagen","textContent","body"],"mappings":"AAMA,SAAAA,iBAEA,MAAAC,EAAAC,SAAAC,cAAA,WAGA,IAAAC,sBAAA,SAAAC,GACAA,EAAA,GAAAC,eACAL,EAAAM,UAAAC,OAAA,SAEAP,EAAAM,UAAAE,IAAA,WAMAC,QAAAR,SAAAC,cAAA,iBAMA,SAAAQ,YACAT,SAAAU,iBAAA,2BAUAC,SAAA,SAAAC,GACAA,EAAAC,iBAAA,SAAA,SAAAC,GACAA,EAAAC,iBAEAC,QAAAC,MAEAjB,SAAAC,cAAAa,EAAAI,OAAAC,WAAAC,KAAAC,OACAC,eAAA,CACAC,SAAA,iBCtCA,SAAAC,eACA,MAAAC,EAAAzB,SAAAC,cAAA,qBAIA,IAAA,IAAAyB,EAAA,EAAAA,GAAA,GAAAA,IAAA,CACA,MAAAC,EAAA3B,SAAA4B,cAAA,OACAD,EAAAE,IAAA,mBAAAH,SACAC,EAAAG,QAAAC,SAAAL,EAGAC,EAAAK,QAAAC,cAEA,MAAAC,EAAAlC,SAAA4B,cAAA,MACAM,EAAAC,YAAAR,GAEAF,EAAAU,YAAAD,IAIA,SAAAD,cAAAG,GAIA,MAAAC,EAAAC,SAAAF,EAAAlB,OAAAY,QAAAC,UAGAJ,EAAA3B,SAAA4B,cAAA,OACAD,EAAAE,IAAA,oBAAAQ,SAEA,MAAAE,EAAAvC,SAAA4B,cAAA,OACAW,EAAAJ,YAAAR,GACAY,EAAAlC,UAAAE,IAAA,WAGA,MAAAiC,EAAAxC,SAAA4B,cAAA,KACAY,EAAAC,YAAA,IACAD,EAAAnC,UAAAE,IAAA,cAGAiC,EAAAR,QAAA,WACAO,EAAAjC,UAGAiC,EAAAJ,YAAAK,GAIA,MAAAE,EAAA1C,SAAAC,cAAA,QACAyC,EAAAP,YAAAI,GACAG,EAAArC,UAAAE,IAAA,cD1DAP,SAAAa,iBAAA,oBAAA,WACAJ,YAEAX,oBCFAE,SAAAa,iBAAA,oBAAA,WACAW","file":"bundle.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function(){\r\n       scrollNav();\r\n\r\n       navegacionFija();\r\n} );\r\n\r\nfunction navegacionFija(){\r\n\r\n    const barra = document.querySelector('.header');\r\n//  Registrar el intersection Observer\r\n\r\nconst Observer = new IntersectionObserver( function(entries){\r\n if(entries[0].isIntersecting){\r\n     barra.classList.remove('.fijo')\r\n    } else{\r\n        barra.classList.add('fijo')\r\n    }\r\n \r\n \r\n})\r\n\r\nObserver.observe(document.querySelector('.descripcion'));\r\n}\r\n//    Elemento Observar \r\n\r\n//PRIMERO BUSCAMOS SELECCIONAR  A QUE ETIQUETA DARLE ACCIONES , AQUI\r\n//SELECCIONAMOS EN HTML LA NAVEGACION PRINCIPAL Y SUS LINKS QUE REDIRECCIONAN\r\nfunction scrollNav(){\r\nconst enlaces = document.querySelectorAll('.navegacion-principal a') //seleccionando todos los enlaces de el html necesarios para el scroll que son los de navegacion\r\n\r\n// a la const enlaces le damos una accion con una funcion es decir al\r\n// escuchar un click hara algo//\r\n\r\n// aqui le damos las acciones a las etiquetas necesarias y prevenimos que haga una accion de redireccion \r\n//ademas con el evento o e se previene la accion de el id puesta en el html con la direccion #lineup etc\r\n\r\n// creas otra seccion para hacer una accion ademas de la manera presentada direccionara de manera facil con javascript y\r\n//ejecutara la accion correcta que indicaste\r\nenlaces.forEach(function(enlace){\r\n enlace.addEventListener('click' , function(e){\r\n e.preventDefault();\r\n\r\n  console.log();\r\n\r\n  const seccion = document.querySelector(e.target.attributes.href.value)\r\n  seccion.scrollIntoView({\r\n      behavior:'smooth'\r\n  });\r\n })\r\n});\r\n}","// forma de agregar imagenes en lista para un html\r\ndocument.addEventListener('DOMContentLoaded', function(){\r\n    crearGaleria();\r\n}) \r\n// primero se crea una funcion para agregarla al html  ^ como la situacion de arriba\r\n\r\n// luego darle una accion a la funcion como abajo que se le da otra\r\n\r\nfunction crearGaleria(){\r\n    const Galeria = document.querySelector(\".galeria-imagenes\") // haces equivalente\r\n    //la variable galeria a la clase .galeria-imagenes de html para inyectar las \r\n    //imagenes\r\n\r\n    for( let i =1 ; i<=12 ; i++){\r\n        const imagen = document.createElement('IMG');\r\n        imagen.src=`build/img/thumb/${i}.webp`; //primero se genera la imagen\r\n        imagen.dataset.imagenId = i;\r\n\r\n        // aÃ±adir funcion de mostrar Imagen\r\n        imagen.onclick = mostrarimagen;\r\n\r\n        const lista = document.createElement('Li'); //despues se genera el li \r\n        lista.appendChild(imagen); // en el li se agregan las imagenes\r\n\r\n        Galeria.appendChild(lista);\r\n    }\r\n}\r\n\r\nfunction mostrarimagen (evento){\r\n //evento es para  el click , target es para que el elemento seleccionado se muestre \r\n //en consola e indique cual estamos seleccionando , el dataset nos indica su\r\n //numero y el id ya es su numero establecido acorde reglas como la i\r\n    const id = parseInt(evento.target.dataset.imagenId);\r\n\r\n    // Generar la imagen\r\n    const imagen = document.createElement('IMG');\r\n    imagen.src = `build/img/grande/${id}.webp`\r\n\r\n    const overlay =  document.createElement('DIV');\r\n    overlay.appendChild(imagen);\r\n    overlay.classList.add('overlay');\r\n\r\n    //boton para cerrar imagen\r\n    const cerrarimagen = document.createElement('p');\r\n    cerrarimagen.textContent = 'X'\r\n    cerrarimagen.classList.add('btn-cerrar')\r\n    // cuando se presiona , cierra la imagen\r\n      \r\n    cerrarimagen.onclick = function(){\r\n        overlay.remove()}\r\n  \r\n\r\n    overlay.appendChild(cerrarimagen);\r\n\r\n    //mostrar en html\r\n\r\n    const body = document.querySelector('body');\r\n    body.appendChild(overlay);\r\n    body.classList.add('fijar-body');\r\n}"]}